//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OdontoSysBusiness.comprobanteWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wa.odontosys.com/", ConfigurationName="comprobanteWS.Comprobantes")]
    public interface Comprobantes {
        
        // CODEGEN: El parámetro 'return' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/InsertComprobanteRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/InsertComprobanteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse InsertComprobante(OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/InsertComprobanteRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/InsertComprobanteResponse")]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse> InsertComprobanteAsync(OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest request);
        
        // CODEGEN: El parámetro 'return' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/ListarComprobantesRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/ListarComprobantesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse ListarComprobantes(OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/ListarComprobantesRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/ListarComprobantesResponse")]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse> ListarComprobantesAsync(OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest request);
        
        // CODEGEN: El parámetro 'return' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/EliminarComprobanteRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/EliminarComprobanteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse EliminarComprobante(OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wa.odontosys.com/Comprobantes/EliminarComprobanteRequest", ReplyAction="http://wa.odontosys.com/Comprobantes/EliminarComprobanteResponse")]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse> EliminarComprobanteAsync(OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wa.odontosys.com/")]
    public partial class comprobante : object, System.ComponentModel.INotifyPropertyChanged {
        
        private localDate fechaEmisionField;
        
        private localTime horaEmisionField;
        
        private int idComprobanteField;
        
        private metodoPago metodoDePagoField;
        
        private double totalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public localDate fechaEmision {
            get {
                return this.fechaEmisionField;
            }
            set {
                this.fechaEmisionField = value;
                this.RaisePropertyChanged("fechaEmision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public localTime horaEmision {
            get {
                return this.horaEmisionField;
            }
            set {
                this.horaEmisionField = value;
                this.RaisePropertyChanged("horaEmision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int idComprobante {
            get {
                return this.idComprobanteField;
            }
            set {
                this.idComprobanteField = value;
                this.RaisePropertyChanged("idComprobante");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public metodoPago metodoDePago {
            get {
                return this.metodoDePagoField;
            }
            set {
                this.metodoDePagoField = value;
                this.RaisePropertyChanged("metodoDePago");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public double total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
                this.RaisePropertyChanged("total");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wa.odontosys.com/")]
    public partial class localDate : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wa.odontosys.com/")]
    public partial class metodoPago : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idMetodoPagoField;
        
        private string nombreField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int idMetodoPago {
            get {
                return this.idMetodoPagoField;
            }
            set {
                this.idMetodoPagoField = value;
                this.RaisePropertyChanged("idMetodoPago");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
                this.RaisePropertyChanged("nombre");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wa.odontosys.com/")]
    public partial class localTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertComprobante", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class InsertComprobanteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wa.odontosys.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OdontoSysBusiness.comprobanteWS.comprobante comprobante;
        
        public InsertComprobanteRequest() {
        }
        
        public InsertComprobanteRequest(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            this.comprobante = comprobante;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertComprobanteResponse", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class InsertComprobanteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wa.odontosys.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int @return;
        
        public InsertComprobanteResponse() {
        }
        
        public InsertComprobanteResponse(int @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListarComprobantes", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class ListarComprobantesRequest {
        
        public ListarComprobantesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListarComprobantesResponse", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class ListarComprobantesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wa.odontosys.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OdontoSysBusiness.comprobanteWS.comprobante[] @return;
        
        public ListarComprobantesResponse() {
        }
        
        public ListarComprobantesResponse(OdontoSysBusiness.comprobanteWS.comprobante[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EliminarComprobante", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class EliminarComprobanteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wa.odontosys.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OdontoSysBusiness.comprobanteWS.comprobante comprobante;
        
        public EliminarComprobanteRequest() {
        }
        
        public EliminarComprobanteRequest(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            this.comprobante = comprobante;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EliminarComprobanteResponse", WrapperNamespace="http://wa.odontosys.com/", IsWrapped=true)]
    public partial class EliminarComprobanteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wa.odontosys.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int @return;
        
        public EliminarComprobanteResponse() {
        }
        
        public EliminarComprobanteResponse(int @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ComprobantesChannel : OdontoSysBusiness.comprobanteWS.Comprobantes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComprobantesClient : System.ServiceModel.ClientBase<OdontoSysBusiness.comprobanteWS.Comprobantes>, OdontoSysBusiness.comprobanteWS.Comprobantes {
        
        public ComprobantesClient() {
        }
        
        public ComprobantesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComprobantesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComprobantesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComprobantesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse OdontoSysBusiness.comprobanteWS.Comprobantes.InsertComprobante(OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest request) {
            return base.Channel.InsertComprobante(request);
        }
        
        public int InsertComprobante(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest inValue = new OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest();
            inValue.comprobante = comprobante;
            OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse retVal = ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).InsertComprobante(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse> OdontoSysBusiness.comprobanteWS.Comprobantes.InsertComprobanteAsync(OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest request) {
            return base.Channel.InsertComprobanteAsync(request);
        }
        
        public System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.InsertComprobanteResponse> InsertComprobanteAsync(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest inValue = new OdontoSysBusiness.comprobanteWS.InsertComprobanteRequest();
            inValue.comprobante = comprobante;
            return ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).InsertComprobanteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse OdontoSysBusiness.comprobanteWS.Comprobantes.ListarComprobantes(OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest request) {
            return base.Channel.ListarComprobantes(request);
        }
        
        public OdontoSysBusiness.comprobanteWS.comprobante[] ListarComprobantes() {
            OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest inValue = new OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest();
            OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse retVal = ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).ListarComprobantes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse> OdontoSysBusiness.comprobanteWS.Comprobantes.ListarComprobantesAsync(OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest request) {
            return base.Channel.ListarComprobantesAsync(request);
        }
        
        public System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.ListarComprobantesResponse> ListarComprobantesAsync() {
            OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest inValue = new OdontoSysBusiness.comprobanteWS.ListarComprobantesRequest();
            return ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).ListarComprobantesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse OdontoSysBusiness.comprobanteWS.Comprobantes.EliminarComprobante(OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest request) {
            return base.Channel.EliminarComprobante(request);
        }
        
        public int EliminarComprobante(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest inValue = new OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest();
            inValue.comprobante = comprobante;
            OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse retVal = ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).EliminarComprobante(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse> OdontoSysBusiness.comprobanteWS.Comprobantes.EliminarComprobanteAsync(OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest request) {
            return base.Channel.EliminarComprobanteAsync(request);
        }
        
        public System.Threading.Tasks.Task<OdontoSysBusiness.comprobanteWS.EliminarComprobanteResponse> EliminarComprobanteAsync(OdontoSysBusiness.comprobanteWS.comprobante comprobante) {
            OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest inValue = new OdontoSysBusiness.comprobanteWS.EliminarComprobanteRequest();
            inValue.comprobante = comprobante;
            return ((OdontoSysBusiness.comprobanteWS.Comprobantes)(this)).EliminarComprobanteAsync(inValue);
        }
    }
}
